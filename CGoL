#! /bin/bash


###create array and variables
arr=()

intro='   _____                               _     
  / ____|                             ( )    
 | |     ___  _ ____      ____ _ _   _|/ ___ 
 | |    / _ \| '\''_ \ \ /\ / / _` | | | | / __|
 | |___| (_) | | | \ V  V / (_| | |_| | \__ \
  \_____\___/|_| |_|\_/\_/ \__,_|\__, |_|___/
  / ____|                         __/ / _|   
 | |  __  __ _ _ __ ___   ___    |___/ |_    
 | | |_ |/ _` | '\''_ ` _ \ / _ \  / _ \|  _|   
 | |__| | (_| | | | | | |  __/ | (_) | |     
  \_____|\__,_|_| |_| |_|\___|  \___/|_|     
  _      _  __                               
 | |    (_)/ _|                              
 | |     _| |_ ___                           
 | |    | |  _/ _ \                          
 | |____| | ||  __/                          
 |______|_|_| \___|                          '
 
ixmin=47
iymin=18

ist=736
irle=46

ts=1

top=""
bot=""

coun=0
counz=0

prompt1="Enter \$x \$y, s to start or q to quit: "
prompt2="Press Enter for next gen or q to quit: "
prompt="$prompt1"

run=false

###create function to update the GUI
gui() { 
	##make truly dynamic and remove screen width bug					-todo
	clear
	###get current terminal size
	ro=$(stty size | awk '{print $1}')
	col=$(stty size | awk '{print $2}')
	
	###extend y if needed
	if ((${#arr[@]}<ro-3))
	then
		for ((dif=${#arr[@]}; dif<ro-3; dif++)); do
			row=""
			for ((c=0; c<${#arr[0]}; c++)); do
				row+="0"
			done
			arr+=("$row")
		done
	fi
	
	###extend x if needed
	if ((${#arr[0]}<col-4))
	then
		###extend x coordinates
		for ((c=${#arr[0]}; c<col-4; c++)); do
			((coun++))
			if ((coun>=10))
			then
				coun=0
				((counz++))
				top+="$counz"
			else
				if ((${#top}<col-4))
				then
					top+="-"
				fi
			fi
			bot+="$coun"
		done
		###extend array
		for ((el=0; el<${#arr[@]}; el++)); do
			for ((ne=${#arr[el]}; ne<col-4; ne++)); do
				arr[el]="${arr[el]}""0"
			done
		done
	fi
	
	###print x coordinates
	echo ${top:0:col-3}" x/"
	echo ${bot:0:col-3}" /y"

	###print grid and y coordinates and account for prompt length
	count=0
	((hight=(${#prompt}+7)/col))

	for ((o=0; o<=ro-4-hight; o++)); do
		((count++))
		echo "${arr[o]:0:$col-3} $count"
	done
}

##title screen
clear

while [ "$ts" -eq 1 ]
do
	ro=$(stty size | awk '{print $1}')
	col=$(stty size | awk '{print $2}')
	if ((ro>=y)) && ((col>=x))
	then
		if ((ist>=0))
		then
			clear
			echo -e "${intro:$ist}"
			((ist-=irle))
			
			sleep 0.15
		else
			clear
			echo -e "$intro"
			echo -e "                      created by F. Hößler"
			sleep 1.5
			ts=0
		fi
	else
		clear
		echo "Enlarge your terminal window for a better experience"
		sleep 3
		ts=0
	fi
	
done

###build the innitial grid
gui

###main loop
while true
do
	###print prompt
	read -p "$prompt" x y
	###update GUI
	gui
	
	###detect if characters were writen
	if ! [ "$x" == "" ]
	then
		###toggle cell
		if ((0<x)) && ((x<=col-4)) && ((0<y)) && ((y<=ro-3))
		then
			if [ "${arr[$y-1]:$x-1:1}" = "0" ]
			then
				arr[$y-1]="${arr[$y-1]:0:$x-1}1${arr[$y-1]:$x}"
			else
				arr[$y-1]="${arr[$y-1]:0:$x-1}0${arr[$y-1]:$x}"
			fi
		###start game
		elif [ "$x" = "s" ] && [ "$y" == "" ]
		then
			run=true
			prompt="$prompt2"
		###quit
		elif [ "$x" = "q" ] && [ "$y" == "" ]
		then
			clear
			exit
		fi
		##auto and help/options								-todo
	else
		if [ $run == true ]
		then
			###calculate next gen in new array
			narr=("${arr[@]}")
			
			c1=0
			for n in ${arr[@]}; do
				((cl++))
				for ((ch=0; ch<${#n}; ch++)); do
					l=0
					li=()
					li+=(${arr[$cl-2]:$ch-1:1} ${arr[$cl-2]:$ch:1} ${arr[$cl-2]:$ch+1:1} ${arr[$cl-1]:$ch-1:1} ${arr[$cl-1]:$ch+1:1} ${arr[$cl]:$ch-1:1} ${arr[$cl]:$ch:1} ${arr[$cl]:$ch+1:1})
					for d in ${li[@]}; do
						if [ $d == "1" ]
						then
							((l++))
						fi
					done
					if [ "${arr[$cl-1]:$ch:1}" == "0" ] && [ $l == "3" ]
					then
						narr[$cl-1]="${narr[$cl-1]:0:$ch}1${narr[$cl-1]:$ch+1}"
					elif [ "${arr[$cl-1]:$ch:1}" == "1" ]
					then
						if ((l<"2"||l>"3"))
						then
							narr[$cl-1]="${narr[$cl-1]:0:$ch}0${narr[$cl-1]:$ch+1}"
						fi
					fi
				done
			done
			cl=0
			###overwrite the main array with the new array
			arr=("${narr[@]}")
		fi
	fi
	
	###update GUI
	gui
done
